buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.0.7'
    //id "net.minecraftforge.gradle.forge" version "2.0.2"
}

repositories {
    maven {
        name 'BR Repo'
        url "http://www.teambrmodding.com/maven2/"
    }
    //maven { url "https://jitpack.io" }
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { //JEI
        name 'DVS1 Maven FS'
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven { url "http://maven.amadornes.com/" }
    maven {
        url 'http://maven.epoxide.xyz'
    }

    maven {
        name 'Player Maven FS'
        url 'http://maven.ic2.player.to/'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

apply plugin: 'scala'
apply plugin: 'maven'
//apply plugin: 'java'
//apply plugin: 'idea'

ext.configFile = file "gradle.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

String APIToken = ''
if (file('APIToken').exists()) {
    APIToken = new File('APIToken').text
}

String build = System.getenv("BUILD_NUMBER")

if (build == null || build == '') {
    version = "${config.minecraft_version}-${config.mod_version}"
} else {
    version = "${config.minecraft_version}-${config.mod_version}-B" + System.getenv("BUILD_NUMBER")
}

group= "com.dyonovan.neotech" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "NeoTech"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {

    version = config.minecraft_version + "-" + config.forge_version

    replaceIn "Reference.scala"
    replace "@VERSION@", "${config.mod_version}"

    runDir = "eclipse"
    useDepAts = true

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    //mappings = "snapshot_20141130"
    mappings = "${config.MAPPINGS}"
    //makeObfSourceJar = false
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

configurations {
    deployerJars
}

dependencies {
    deployerJars "org.apache.maven.wagon:wagon-ftp:2.2"
    compile "mcp.mobius.waila:Waila:${config.WAILA_version}:dev"
    deobfCompile "mezz.jei:jei_${config.minecraft_version}:${config.JEI_version}"
    //deobfCompile "MCMultiPart:MCMultiPart-experimental:${config.MCMultiPart_version}:universal"
    compile group: "com.teambr.bookshelf", name: "Bookshelf-API", version: "1.10.2-4+", classifier: "dev", changing: true
    compile "net.darkhax.tesla:Tesla:${config.TESLA_version}"
    deobfCompile "net.industrial-craft:industrialcraft-2:${config.IC2_version}:dev"
}

task devJar(type: Jar, dependsOn: 'classes') {
    from(sourceSets.main.output) {
        include '**'
    }
    extension = 'jar'
    classifier = 'dev'
}

task sourceJarScala(type: Jar, dependsOn: "classes") {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives devJar
    archives sourceJarScala
}

processResources
{
    exclude '**/Thumbs.db'

    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes 'FMLAT': 'neotech_at.cfg'
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars
            //repository(url: System.properties['URL']) {
            repository(url: System.properties['URL']) {
                authentication(userName: System.properties['HTTPUSERNAME'], password: System.properties['HTTPPASSWORD'])
            }

            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName

                pom.project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description 'NeoTech'
                    url 'https://github.com/TeamBR-Modding/NeoTech'
                    scm {
                        url 'https://github.com/TeamBR-Modding/NeoTech'
                        connection 'scm:git:git@github.com/TeamBR-Modding/NeoTech.git'
                        developerConnection 'scm:git:git@github.com/TeamBR-Modding/NeoTech.git'
                    }
                    issueManagement {
                        system 'github'
                        url 'https://github.com/TeamBR-Modding/NeoTech/issues'
                    }
                    licenses {
                        license {
                            name 'Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License'
                            url 'http://creativecommons.org/licenses/by-nc-sa/4.0/'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'Dyonovan'
                            name 'Dyonovan'
                            roles {
                                role 'developer'
                            }
                        }
                        developer {
                            id 'pauljoda'
                            name 'pauljoda'
                            roles {
                                role 'developer'
                            }
                        }
                    }
                }
            }
        }
    }
}

curseforge {
    apiKey = APIToken
    project {
        id = '228643'
        changelog = 'Changelog: https://github.com/TeamBR-Modding/NeoTech/wiki/Changelog'
        releaseType = 'beta'
        addGameVersion '1.10.2'
        addArtifact devJar
        relations {
            requiredLibrary 'bookshelf-api-library'
        }
    }
}
